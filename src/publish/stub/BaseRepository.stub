<?php

declare(strict_types=1);

namespace App\Base;

use Hyperf\Config\Annotation\Value;
use Hyperf\Context\Context;
use App\Base\src\RepositoryPackage;
 

abstract class BaseRepository
{
    use RepositoryPackage;

    protected $model;

    #[Value('generate')]
    protected $config;

    protected $user;

    public function model(): string
    {
        return {{ model }}. '\\' . str_replace('Repository', '', $this->class_basename(get_class($this)));
    }

    public function __construct()
    {
        $this->makeModel();

        return $this;
    }

    public function makeModel()
    {
        return $this->setModel($this->model());
    }

    public function setModel($eloquentModel)
    {
        if(!class_exists($eloquentModel)){
            throw new \RuntimeException('model not found');
        }

        return $this->model = new $eloquentModel();
    }

    public function class_basename($class)
    {
        $class = is_object($class) ? get_class($class) : $class;

        return basename(str_replace('\\', '/', $class));
    }

    public function getUserToken(): bool
    {
        $user = Context::get('userToken');

        if ($user) {
            $user = json_decode($user, true);
        }

        $this->user = $user;

        return true;
    }
}