<?php

declare(strict_types=1);
/**
 * This file is part of Hyperf.
 *
 * @link     https://www.hyperf.io
 * @document https://hyperf.wiki
 * @contact  group@hyperf.io
 * @license  https://github.com/hyperf/hyperf/blob/master/LICENSE
 */

namespace App\Exception\Handler;

use App\Base\src\LogMonMain;
use Hyperf\Contract\StdoutLoggerInterface;
use Hyperf\Di\Annotation\Inject;
use Hyperf\ExceptionHandler\ExceptionHandler;
use Hyperf\HttpMessage\Stream\SwooleStream;
use Psr\Http\Message\ResponseInterface;
use Throwable;

class ApiDeBugExceptionHandler extends ExceptionHandler
{
    protected $logMonMain;

    public function __construct(ContainerInterface $container)
    {
        $this->logMonMain = $container->get(LogMonMain::class);
    }
    
    public function handle(Throwable $throwable, ResponseInterface $response)
    {
        $errorMessage = sprintf(
            "%s\nLine: %d\nFile:%s\nDate: %s",
            $throwable->getMessage(),
            $throwable->getLine(),
            $throwable->getFile(),
            date("Y-m-d H:i:s")
        );

        $this->logMonMain->error('DeBug',$errorMessage);

        return $response->withHeader('Server', 'Hyperf')->withStatus(500)->withBody(new SwooleStream($errorMessage));
    }

    public function isValid(Throwable $throwable): bool
    {
        return true;
    }
}
