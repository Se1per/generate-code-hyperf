<?php

namespace {{ namespace }};

use {{ base }}\BaseService;
use App\Exception\ApiException;
use Hyperf\Di\Annotation\Inject;
use App\Constants\JsonCodeConstants;
use {{ repository }}\{{ table }}Repository;

class {{ class }} extends BaseService
{
    #[Inject]
    private ?{{ table }}Repository $repository;

    public function save{{ table }}Data($data): array
    {
        $object =  $this->repository->save{{ table }}Data($data);

        if($object) return [JsonCodeConstants::Success];

        throw new ApiException(JsonCodeConstants::WARNING,$object);
    }

    public function del{{ table }}Data($data): array
    {
        $object = $this->repository->deleteData($data);

        if($object) return [JsonCodeConstants::Success];

        throw new ApiException(JsonCodeConstants::WARNING,$object);
    }

    public function get{{ table }}Data($data) 
    {
        $object = $this->repository->get{{ table }}Data($data);

        $total = $this->repository->get{{ table }}Count($data);

         return [JsonCodeConstants::Success,null,$object,$total];
    }
}
